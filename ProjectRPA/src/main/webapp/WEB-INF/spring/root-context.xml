<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- HikariCP 설정 객체 생성 -->
	<!-- id값을 주지 않으면 기본적으로 HikariConfig(소문자)를 자동설정 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- setter 방식 주입 setDriverClassNzme -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="kbh"/>
		<property name="password" value="1234"/>
	</bean>
	
	<!-- HikariCP로 데이터 가져오기(dataSource)객체 생성 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	<!-- MyBatis의 spring 연결 객체 -->
	<bean id="sqlSessionFatory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
    <!-- navermail설정 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
	    <property name="host" value="smtp.naver.com"/> <!-- 메이서버 호스트 -->
	    <property name="port" value="465"/> <!-- 메이서버 포트번호 -->
	    <property name="username" value="kbh25962@naver.com"/> <!-- 관리자 이메일 아이디 -->
	    <property name="password" value="4YRMBCB91RVB"/> <!-- 2단계 보안 앱 비밀번호 생성-->
	    												 <!-- 네이버는 메일탭에서 SMTP 수신설정 따로 해줘야함 -->
	      <!-- 보안연결 SSL과 관련된 설정 -->
	    <property name="javaMailProperties">
		    <props>
			    <prop key="mail.smtp.auth">true</prop>
		     	<prop key="mail.smtp.starttls.enable">true</prop>
			    <prop key="mail.smtps.checkserveridentity">true</prop>
			    <prop key="mail.smtps.ssl.trust">*</prop>
			    <prop key="mail.debug">true</prop>
			    <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
		    </props>
	    </property>
    </bean>
	
	
	<!-- Tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven/>

	<!-- quartz 스케쥴링, 배치 프로그램 -->
	<task:annotation-driven/>
	

	<mybatis-spring:scan base-package="com.rpa.admin.goods.sportswear.mapper" />
	<mybatis-spring:scan base-package="com.rpa.goods.sportswear.mapper" />
	<mybatis-spring:scan base-package="com.rpa.user.mapper"/>
	<mybatis-spring:scan base-package="com.rpa.pt.mapper"/>

	<context:component-scan	base-package="com.rpa"></context:component-scan>
	


</beans>

